#include <bits/stdc++.h>
using namespace std;

typedef vector<int> bignum;

bignum add(const bignum& a, const bignum& b) {
    int n = max(a.size(), b.size());
    bignum c(n + 1, 0);
    
    for (int i = 0; i < n; ++i) {
        if (i < a.size()) c[i] += a[i];
        if (i < b.size()) c[i] += b[i];
        if (c[i] >= 10) {
            c[i] -= 10;
            c[i + 1]++;
        }
    }
    if (c.back() == 0) c.pop_back();
    return c;
}

bignum toBignum(const string& s) {
    bignum num(s.size());
    for (int i = 0; i < s.size(); ++i)
        num[i] = s[s.size() - 1 - i] - '0';
    return num;
}

string toString(const bignum& num) {
    string s;
    for (int i = num.size() - 1; i >= 0; --i)
        s += char(num[i] + '0');
    return s;
}

int main() {
    string a, b;
    cin >> a >> b;
    bignum A = toBignum(a);
    bignum B = toBignum(b);
    bignum C = add(A, B);
    cout << toString(C) << endl;
    return 0;
}
